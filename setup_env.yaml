---
- hosts: localhost
  tasks:
    - name: Install required dnf packages
      become: true
      dnf:
        name:
          - zsh
          - git
          - curl
          - cmake
          - openssh-server
          - python-cppy
          - python3-devel
          - gcc-c++
          - tmux
          - vim
          - libxslt-devel
          - libxml2-devel
          - dnf-plugins-core
        state: "latest"

    - name: Enable openssh
      become: true
      ansible.builtin.systemd:
        name: sshd
        enabled: yes
        state: started

    # Make sure oh-my-zsh is installed
    - name: Check if .zshrc exists
      stat:
        path: ~/.zshrc
      register: stat_rc_result

    - name: Check if .oh-my-zsh exists
      stat:
        path: ~/.oh-my-zsh
      register: stat_oh_my_zsh_result

    - name: Cloning  oh-my-zsh
      git:
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest=~/.oh-my-zsh
      when: not stat_oh_my_zsh_result.stat.exists

    - name: Creating new ~/.zshrc
      copy:
        src=~/.oh-my-zsh/templates/zshrc.zsh-template
        dest=~/.zshrc
      when: not stat_rc_result.stat.exists

    - name: Set default shell for parallels user
      become: true
      ansible.builtin.user:
        name: parallels
        shell: /usr/bin/zsh

    # Make sure Docker is installed
    - name: Check if docker is already installed
      become: true
      ansible.builtin.shell: "docker --version"
      failed_when: false
      changed_when: false
      register: docker_version

    - name: Download docker install script
      when: docker_version.rc != 0
      ansible.builtin.get_url:
        url: https://get.docker.com
        dest: /tmp/get-docker.sh

    - name: Install docker
      when: docker_version.rc != 0
      become: true
      ansible.builtin.shell: sh /tmp/get-docker.sh

    - name: Enable docker service
      become: true
      ansible.builtin.systemd:
        name: docker
        enabled: yes
        state: started

    - name: Check docker group exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add docker group to user
      become: true
      ansible.builtin.user:
        name: parallels
        groups: docker
        append: yes

    - name: Copy vimrc configuration
      ansible.builtin.copy:
        src: templates/.vimrc
        dest: /home/parallels/.vimrc

    - name: Copy tmux configuration
      ansible.builtin.copy:
        src: templates/.tmux.conf
        dest: /home/parallels/.tmux.conf

    - name: Clone Vundle repository
      git:
        repo: https://github.com/VundleVim/Vundle.vim.git
        dest: /home/parallels/.vim/bundle/Vundle.vim
        clone: yes
        update: yes

    - name: Make sure vim plugins are installed
      ansible.builtin.shell: "vim +PluginInstall +qall"
    - name: Add extras to vimrc
      ansible.builtin.shell: "cat templates/.vimrc_extras >> /home/parallels/.vimrc"

    - name: Compile YouCompleteMe vim plugin
      ansible.builtin.shell: |
        cd /home/parallels/.vim/bundle/youcompleteme/
        python3 install.py
    
    - name: Install useful pip packages
      ansible.builtin.pip:
        name:
          - awscli-local
          - terraform-local
          - localstack
          - mitmproxy
          - envsubst
          - keyring
          - wheel
          - twine

    - name: Add Hashicorp repo
      become: true
      ansible.builtin.shell: |
        dnf config-manager --add-repo https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
    - name: Install Terraform
      become: true
      dnf:
        name: terraform

    # Make sure awscli is installed
    - name: Check if awscli is already installed
      become: true
      ansible.builtin.shell: "aws --version"
      failed_when: false
      changed_when: false
      register: aws_version

    - name: Download awscliv2 install script
      when: aws_version.rc != 0
      ansible.builtin.get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip

    - name: Install awscliv2
      when: aws_version.rc != 0
      become: true
      ansible.builtin.shell: |
        cd /tmp/
        unzip awscliv2.zip
        ./aws/install
